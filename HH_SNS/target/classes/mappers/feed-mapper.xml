<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.spring.ex06.FeedMapper">
	<!-- ★ ${key 이름} : mybatis-config.xml의 property - name(vo)과 매칭. DB 테이블의 
		컬럼 ★ #{key 이름} : dao 클래스의 sqlSession에서 전송받은 데이터 변수명(입력받은 데이터) -->

	<!-- private int feedId;
		 private String feedContent; 
		 private String userId; 
		 private String userNickname; 
		 private String userProfile; 
		 private String replyCount; 
		 private String likeCount; 
		 private Date feedDate; 
		 private String musicTitle; -->

	<!-- 
		INSERT INTO [테이블명] values([시퀀스명].NEXTVAL, 'test');
	 -->
	
	<insert id="insert">
		insert into ${feed}
		values (FEED_SEQ.NEXTVAL, #{feedContent}, #{userId}, #{userNickname}, #{userProfile}, 0, 0, sysdate, #{musicTitle})
	</insert>
	
	<!-- 
	여기 실험중 
	하고싶은거 : 시퀀스가 있는 상태에서 join를 해서 userId값을 가져오고 insert쿼리짜기

	<insert id="insert">
  		insert into ${feed} (feed_id, feed_content, user_id, user_nickname, user_profile, reply_count, like_count, feed_date, music_title)
  		select 
    		FEED_SEQ.NEXTVAL, 
    		#{feedContent}, 
    		ui.user_id, 
    		ui.user_nickname, 
    		ui.user_profile, 
    		0, 
    		0, 
    		sysdate, 
    		#{musicTitle}
  		from user_info ui
  		where ui.user_id = #{userId}
	</insert>
		-->
		
		<!--
		select f.feed_id, u.user_id from feed 
		f full outer join user_info u on f.user_id=u.user_id;
		
		outer join = 겹치는것(=userid) 빼고도 선택한 모든건 같이 뜸
		근데 나 join 4개 필요함 ;ㅎ
		 -->
		
	<select id="select_all" resultType="FeedVO">
	 	select ${feedId}, ${feedContent}, ${userId}, ${userNickname}, ${userProfile},  
	 	${replyCount}, ${likeCount}, ${feedDate}, ${musicTitle} from ${feed}
	 	order by ${feedDate} desc
	 </select>
	 
	 <select id="select" resultType="FeedVO">
		select ${feedId}, ${feedContent}, ${userId}, ${userNickname}, ${userProfile},  
	 	${replyCount}, ${likeCount}, ${feedDate}, ${musicTitle} from ${feed}
		where ${feedId} = #{feedId}
	 </select>
	
	 <update id="update">
	 	update ${feed} set
	 	${feedContent} = #{feedContent}, ${userNickname} = #{userNickname},
	 	${userProfile} = #{userProfile}, ${musicTitle} = #{musicTitle}
	 	where ${feedId} = #{feedId}
	 </update>
	 
	 <delete id="delete">
	 	delete from ${feed}
	 	where ${feedId} = #{feedId}
	 </delete>
	 
	 <select id="select_all_by_id" resultType="FeedVO">
	 	select ${feedId}, ${feedContent}, ${userId}, ${userNickname}, ${userProfile},  
	 	${replyCount}, ${likeCount}, ${feedDate}, ${musicTitle} from ${feed}
	 	order by ${feedId} desc
	 </select>

</mapper>